# 负载均衡，weight权重
# upstream webcanteen {
#     server 127.0.0.1:66 weight=10;
#     server 127.0.0.1:77 weight=1;
#     server 127.0.0.1:88 weight=1;
# }

server {
    listen 80;
    server_name sunnychenglang.com;
    rewrite ^(.*)$ https://sunnychenglang.com;
}

server {
    #端口
    listen 443 ssl;
    #服务器名称
    server_name sunnychenglang.com;
    #访问日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
            '$status $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';
    #签名文件
    ssl_certificate cert/sunnychenglang.com.crt;
    #密钥
    ssl_certificate_key cert/sunnychenglang.com.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    #减少点击劫持
    add_header X-Frame-Options DENY;
    #禁止服务器自动解析资源类型
    add_header X-Content-Type-Options nosniff;
    #防XSS攻击
    add_header X-Xss-Protection 1; 
    #开启和关闭gzip模式
    gzip on;
    #gizp压缩起点，文件大于1k才进行压缩
    gzip_min_length 1k;
    # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间
    gzip_comp_level 6;
    # 进行压缩的文件类型。
    
    #nginx对于静态文件的处理模块，开启后会寻找以.gz结尾的文件，直接返回，不会占用cpu进行压缩，如果找不到则不进行压缩
    # gzip_static on|off
    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary on;
    # 设置压缩所需要的缓冲区大小，以4k为单位，如果文件为7k则申请2*4k的缓冲区 
    gzip_buffers 4 16k;
    # 设置gzip压缩针对的HTTP协议版本
    # gzip_http_version 1.1;
    location / {
        root   /var/www/html;
        index  index.html index.html;
        add_header cache-control max-age=3600;
        keepalive_timeout  0;
    }
    error_page 404 /404.html;
    #开启访问日
    access_log  logs/www_access.log main;
   
}

